{
  "info": {
    "name": "API Sistema de Abastecimento - Testes Automatizados",
    "description": "Collection de testes automatizados para validar todas as funcionalidades da API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "游빍 Testes de Autentica칞칚o",
      "item": [
        {
          "name": "Teste - Login V치lido",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('accessToken');",
                  "    pm.expect(response.accessToken).to.be.a('string');",
                  "    pm.collectionVariables.set('jwt_token', response.accessToken);",
                  "});",
                  "",
                  "pm.test('Response has refresh token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('refreshToken');",
                  "    pm.expect(response.refreshToken).to.be.a('string');",
                  "    pm.collectionVariables.set('refresh_token', response.refreshToken);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "    pm.expect(response.user).to.have.property('id');",
                  "    pm.collectionVariables.set('user_id', response.user.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@nordev.com\",\n  \"senha\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Teste - Login Inv치lido",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has error message', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('Credenciais inv치lidas');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"usuario@inexistente.com\",\n  \"senha\": \"senhaerrada\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Teste - Perfil do Usu치rio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user profile', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('email');",
                  "    pm.expect(response).to.have.property('nome');",
                  "    pm.expect(response).to.have.property('tipo_usuario');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "游빍 Testes de Usu치rios",
      "item": [
        {
          "name": "Teste - Listar Usu치rios",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has users array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    pm.expect(response.data.length).to.be.greaterThan(0);",
                  "});",
                  "",
                  "pm.test('Response has pagination', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('total');",
                  "    pm.expect(response).to.have.property('page');",
                  "    pm.expect(response).to.have.property('limit');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/usuarios?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["usuarios"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Teste - Criar Usu치rio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has created user', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('email');",
                  "    pm.expect(response.email).to.equal('teste@usuario.com');",
                  "    pm.collectionVariables.set('created_user_id', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"teste@usuario.com\",\n  \"senha\": \"123456\",\n  \"nome\": \"Usu치rio de Teste\",\n  \"cpf\": \"12345678901\",\n  \"tipo_usuario\": \"COLABORADOR_PREFEITURA\",\n  \"prefeituraId\": 1,\n  \"phone\": \"11999999999\",\n  \"statusAcess\": \"Acesso_solicitado\",\n  \"ativo\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/usuarios",
              "host": ["{{base_url}}"],
              "path": ["usuarios"]
            }
          }
        },
        {
          "name": "Teste - Buscar Usu치rio por ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('email');",
                  "    pm.expect(response).to.have.property('nome');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/usuarios/{{created_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["usuarios", "{{created_user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "游빍 Testes de Prefeituras",
      "item": [
        {
          "name": "Teste - Listar Prefeituras",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has prefeituras array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    pm.expect(response.data.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/prefeituras?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["prefeituras"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Teste - Buscar Prefeitura por ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has prefeitura data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('nome');",
                  "    pm.expect(response).to.have.property('cnpj');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/prefeituras/1",
              "host": ["{{base_url}}"],
              "path": ["prefeituras", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "游빍 Testes de Empresas",
      "item": [
        {
          "name": "Teste - Listar Empresas",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has empresas array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    pm.expect(response.data.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/empresas?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["empresas"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Teste - Buscar Empresas Pr칩ximas",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has empresas array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/empresas/nearby?latitude=-23.5505&longitude=-46.6333&radius=10",
              "host": ["{{base_url}}"],
              "path": ["empresas", "nearby"],
              "query": [
                {
                  "key": "latitude",
                  "value": "-23.5505"
                },
                {
                  "key": "longitude",
                  "value": "-46.6333"
                },
                {
                  "key": "radius",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "游빍 Testes de Valida칞칚o",
      "item": [
        {
          "name": "Teste - Criar Usu치rio com Dados Inv치lidos",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Response has validation errors', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.be.an('array');",
                  "    pm.expect(response.message.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"email-invalido\",\n  \"senha\": \"123\",\n  \"nome\": \"\",\n  \"cpf\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/usuarios",
              "host": ["{{base_url}}"],
              "path": ["usuarios"]
            }
          }
        },
        {
          "name": "Teste - Acesso sem Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has unauthorized message', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('Unauthorized');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/usuarios",
              "host": ["{{base_url}}"],
              "path": ["usuarios"]
            }
          }
        }
      ]
    }
  ]
}
